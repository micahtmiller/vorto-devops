# Default values for goserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# Bringing in sql sidecar info from https://github.com/helm/charts/blob/master/stable/gcloud-sqlproxy

replicaCount: 1

image:
    repository: gcr.io/sandbox-mtm/go_server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    # tag: "v0.2" # pull from Chart.yaml

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

env:
    secretName: goserver-secret
    secretKey: uri

sqlsidecar:
    repository: gcr.io/cloudsql-docker/gce-proxy
    tag: "1.17"
    sql_connection_name: "sql_connection_name" #inject from TF
    port: 5432
    secretName: "cloudsql-sa-secret"
    secretKey: "service_account.json"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  name: goserver
  type: LoadBalancer
  externalPort: 80
  internalPort: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

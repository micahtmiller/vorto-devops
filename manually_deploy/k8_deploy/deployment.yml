apiVersion: apps/v1
kind: Deployment
metadata:
    name: goserver
spec:
    replicas: 1
    selector:
      matchLabels:
        app: goserver
    template:
      metadata:
        labels:
          app: goserver
      spec:
        containers:
        - name: goserver
          image: gcr.io/sandbox-mtm/go_server:latest
        # This app listens on port 8080 for web traffic by default.
          ports:
          - containerPort: 8080
          env:
          - name: PORT
            value: "8080"
          - name: DATABASE_URL
            valueFrom:
                secretKeyRef:
                    name: goserver-secret
                    key: uri
        - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          command:
            - /cloud_sql_proxy
            - -dir=/cloudsql
            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "-ip_address_types=PRIVATE"

            # Replace DB_PORT with the port the proxy should listen on
            # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
            - -instances=sandbox-mtm:us-central1:vorto4-f75d323e=tcp:0.0.0.0:5432
            - -credential_file=/secrets/service_account.json
            - term_timeout=10s
        lifecycle:
          preStop:
            exec:
              # (optional) add a preStop hook so that termination is delayed
              # this is required if your server still require new connections (e.g., connection pools)
              command: ['sleep', '10']
        ports:
        - name: cloud-sql-port
          containerPort: 5432
          volumeMounts:
          - name: cloudsql-sa-secret-volume
            mountPath: /secrets/
            readOnly: true
        volumes:
        - name: cloudsql-sa-secret
          secret:
            secretName: cloudsql-sa-secret
